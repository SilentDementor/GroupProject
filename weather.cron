import requests
import sqlalchemy as sqla
from sqlalchemy import create_engine, Table, Column, Integer, String, Float
from sqlalchemy.sql import text
import config

api_key = 'ef8a3722135be9a302f5ea61c8a732ae'
city = 'Dublin'
country_code = 'ie'

# Create the engine object for connecting to the database
db_username = config.user
db_password = config.passwd
db_name = config.db_name
db_host = config.host
db_port = config.port
engine = create_engine(f"mysql+mysqldb://{db_username}:{db_password}@{db_host}:{db_port}/{db_name}")

# Define the weather_history table
metadata = sqla.MetaData()

weather_history = Table(
    'weather_history', metadata,
    Column('date_time', Integer, primary_key=True),
    Column('weather_id', Integer),
    Column('weather_main', String(256)),
    Column('weather_description', String(256)),
    Column('temperature', Float),
    Column('temp_feels_like', Float),
    Column('pressure', Integer),
    Column('humidity', Integer),
    Column('visibility', Integer),
    Column('wind_speed', Float),
    Column('rain_volume', Float)
)

metadata.create_all(engine)

# create the API request URL
url = f'https://api.openweathermap.org/data/2.5/weather?q={city},{country_code}&appid={api_key}'

# send the API request and get the response
response = requests.get(url)

# extract the weather information from the response
weather_data = response.json()

# Insert a new row into the weather_history table
def weather_to_db(weather_data):
    stmt = weather_history.insert().values(
        date_time=int(weather_data["dt"]),
        weather_id=weather_data["weather"][0]["id"],
        weather_main=weather_data["weather"][0]["main"],
        weather_description=weather_data["weather"][0]["description"],
        temperature=weather_data["main"]["temp"],
        temp_feels_like=weather_data["main"]["feels_like"],
        pressure=weather_data["main"]["pressure"],
        humidity=weather_data["main"]["humidity"],
        visibility=weather_data["visibility"],
        wind_speed=weather_data["wind"]["speed"],
        rain_volume=weather_data.get("rain", {}).get("1h", None)
    )
    try:
        with engine.connect() as conn:
            conn.execute(stmt)
            conn.commit()
    except Exception as e:
        print("Error inserting row:", e)

weather_to_db(weather_data)
